%	CONFIGURATION SPECIFICATION
%	This file sets the parameters for one or more simulations
% 	The general structure of this config file is: PARAMETER : value
%	A parameter-value combination must be on its own line.
%
%	Each PARAMETER is spelled with CAPITAL LETTERS and comes in three flavours:
%		'The "RUN" parameter' 	marks the beginning of a new simulation.
%		'Specific parameters'	are specific for each simulation. The type of 
%								specific parameters needed is dictated by the 
%								value of 'RUN'.
%		'general parameters'	which are valied for for all types of simulations and
%								takes on default values if the parameter is missing
%
%	Each PARAMETER has its own specific valid value.
%	The values are given with small letters or numbers and comes in four flavours:
%		'Specific values'		These values are keywords specific to the given
%								parameter and are specified below.
%		'Unsigned integer'		Which is just a positive integer
%		'Float'					Wich is a decimal number
%		'Boolean'				Which are the words 'true' or 'false'
%
% 	Comments start with a '%'
%
%	The program tries to check the validity of the config file and is pretty good at
%	handeling errors but for simplicity any text line not following this specification
%	is considered undefined behaviour.
%
% 	Below is a list of all PARAMETERS and their values:
%	The general formula for this list is recursively 
%	COMMAND: 'value' - explanation 	
%
%
%	RUN: 'Specific Value' -  marks the start of a new simulation. 
%		'Specific Value' for RUN is:
%		* verify 	- Calculates values for the structure which can be verified 
%					  against a theoretical value in order to verify the structure 
%				 	  of the chain. 
%
%			'Specific Parameter' for 'RUN: verify' is:
%			SIZE: 		'Unsigned integer' 	- The size the longest chain
%			STRIDES: 	'Unsigned integer' 	- # datapoints
%			SAMPLES: 	'Unsigned integer' 	- # of samples for each stride.
%			EXP: 		'Boolean' 			- If the strides should be spaced linearly or exponentially
%	
%		* visualize - Builds one chain which can be plotted in matlab
%
%			'Specific parameters' for 'RUN: visualize' is:
%			SIZE:		'Unsigned integer' 	- The size of the chain
%			
%		* distance -  Builds an ensamble of chains and lets a particle diffract through them and calculates
%					  man distance and first passage.
%					
%	Below are general parameters valid for any simulation. Note:	not all general parameters has to be used in a simulation
%																	but they can be good to have.
%
%	TYPE: 'Specific value'	- What type of chain should be studied.
%		'Specific Value' for TYPE is;
%		* phantom		A self intersecting random walk
%			- Not affected by general parameter SELFINTERSECTION
%			- Not affected by general parameter WEIGHT
% 		* saw			A self-avoiding random walk
%			- Not affected by general parameter WEIGHT
%		* fg			A Fractal-Globule
%			- Not (yet) affected by general parameter WEIGHT
%		Default is 'fg'
%
%	OUTFILE:	- Relative path to an output file in quotation marks. If file exists
%				  it will be overwritten. 
%			Directory must exist and have the .dna extention for saftey.
%			Default is '../data/default_data.dna'
%
%	VERBOSE: 'Boolean'  - Tells if the program should print progress to terminal
% 			Default is 'true'.
%
%	WEIGHT: 'Boolean'	- Tells if the simulation should use weighted chains when doing the statistical analysis
%			Default is 'true'.
%			- Only works for chain TYPE 'saw'
%
%	SELFINTERSECTION: 'Boolean'	- Tells if the chain should allow for selfintersection or not.
%			Default is true;
%			- Only works for chain TYPE 'fg'
%
%
%	Below is a working example of verify and visualize


RUN: verify
	SIZE: 10000
 	STRIDES: 50
	SAMPLES: 50
	EXP: true


	TYPE: saw
	VERBOSE: true
	OUTFILE: ../data/Verify_Default.dna

RUN: visualize
	SIZE: 10

	VERBOSE: true
	OUTFILE: ../data/Visualize_Default.dna
