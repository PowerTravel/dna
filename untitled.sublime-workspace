{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "#ifndef MEAN_DISTANCE_HPP\n#define MEAN_DISTANCE_HPP\n\n#include \"Simulation.hpp\"\n#include \"CollisionGrid.hpp\"\n#include \"Particle.hpp\"\nclass Distance: public Simulation\n{\n	public:\n		Distance(std::map<std::string, std::string> sm);\n\n		void apply();\n\n	private:\n\n		Eigen::ArrayXXd run_simulation_once(double radius, \n							Eigen::Vector3d x_ini, Eigen::Vector3d v_ini, \n							double tot_time, double dt, \n							CollisionGrid* cg);\n\n		void init_simulaition_parameters(std::map<std::string, std::string> sm);\n		void print(std::ostream& os);\n\n\n\n		Eigen::ArrayXXd P;		// Position\n		Eigen::ArrayXXd P_var;	// Position variance\n		Eigen::ArrayXd D;		// Distance\n		Eigen::ArrayXd D_var;	// Distance Variance\n\n		int nr_simulations;\n		int nr_data_points;\n		Eigen::ArrayXd time_steps;\n		Eigen::ArrayXd time_step_mean;\n\n		int _size;\n		double _box_size;\n		double _rad;\n\n		int get_max(Eigen::Array3d v);\n\n		void write_to_terminal(int i, int j);\n		void write_to_file();\n};\n\n#endif // MEAN_DISTANCE_HPP\n",
			"file": "include/Distance.hpp",
			"file_size": 984,
			"file_write_time": 130979507824093446,
			"settings":
			{
				"buffer_size": 984,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Statistics.hpp",
			"settings":
			{
				"buffer_size": 556,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Particle.hpp",
			"settings":
			{
				"buffer_size": 1698,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef VERIFY_HPP\n#define VERIFY_HPP\n\n#ifndef THEORETICAL_SLOPES\n#define PHANTOM_SLOPE 1/2.f // Polymer Textbook p 18\n#define SAW_SLOPE 0.588		// Lizana\n#define FG_SLOPE 1/3.f		// Lizana\n#endif // THEORETICAL_SLOPES\n\n#ifndef THEORETICAL_FOREFACTORS\n#define PHANTOM_R_FF 1			// Polymer Textbook p 18\n#define PHANTOM_RG_FF 1/sqrt(6) // Polymer Textbook p 18\n#define SAW_R_FF 1				// Need to find out\n#define SAW_RG_FF 0.4205		// Polymer textbook p 40, numerical\n#define FG_R_FF 1 				// Unknown\n#define FG_RG_FF 1				// Unknown\n#endif // THEORETICAL_FOREFACTORS\n\n#ifndef START_POINT\n#define START_POINT 10\n#endif\n\n\n#include \"Simulation.hpp\" \n#include \"PhantomChain.hpp\"\n#include \"PFloat.hpp\"\n#include <Eigen/Dense>\n/*\n	Valid parameters\n	\"SIZE\" = UNSIGNED_INTEGER_TYPE\n	\"STRIDES\" = UNSIGNED_INTEGER_TYPE;\n	\"EXP\" = BOOL_TYPE;\n	\"SAMPLES\" = UNSIGNED_INTEGER_TYPE;\n\n	Output:\n	A file with columns:\n	Nr links,  \n	R, Variance, Theoretical\n	Rg, Variance, Theoretical\n*/\n\nclass Verify : public  Simulation{\n	\n	public:\n		Verify();\n		Verify(std::map<std::string, std::string> sm);\n		virtual ~Verify();\n\n		virtual void print(std::ostream& os);\n		void apply();\n		\n	private:\n		int _size;\n		int _strides;\n		bool _exp;\n		int _samples;\n	\n		double _step_size;\n\n\n		//Chain::ChainType _t;\n		double _theoretical_slope;\n		double _theoretical_Rg_slope;\n	\n		void set_theoretical_values();\n		\n		// Global\n		Eigen::ArrayXd nr_links;    // Number of links in each chain\n		Eigen::ArrayXd link_mean;\n\n		// Result arrays for mean distance\n		Eigen::ArrayXd R;  			// End to end distance of chains\n		Eigen::ArrayXd R_var;		// Variance\n		Eigen::ArrayXd R_theo;   	// Theoretical value\n\n		// Result arrays for mean Radious of gyration\n		Eigen::ArrayXd Rg;   		// Radius of gyration\n		Eigen::ArrayXd Rg_var; 		// Variance\n		Eigen::ArrayXd Rg_theo; 	// Theoretical value\n\n		// write progress to terminal\n		bool _verbose;					// Plot to terminal?\n		double _increment;				// The update ammount\n		double _plot_interval; 		    // update rate = interval * increment;\n		double _percent;				// Counter\n\n\n		void init_simulaition_parameters(std::map<std::string, std::string> sm);\n		\n		void init_plotting_parameters();\n		void write_to_terminal(int N, int i, int j);\n		void write_to_file();\n		void set_chain_type();\n\n		PFloat mult_weights(Eigen::ArrayXd w);\n};\n\n#endif //  VERIFY_HPP\n",
			"file": "include/Verify.hpp",
			"file_size": 2335,
			"file_write_time": 130978486841734520,
			"settings":
			{
				"buffer_size": 2336,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Verify.cpp",
			"settings":
			{
				"buffer_size": 5974,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Distance.cpp",
			"settings":
			{
				"buffer_size": 5595,
				"line_ending": "Unix"
			}
		},
		{
			"file": "configs/DEFAULT",
			"settings":
			{
				"buffer_size": 696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Statistics.cpp",
			"settings":
			{
				"buffer_size": 2167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Particle.cpp",
			"settings":
			{
				"buffer_size": 10376,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/jh/Desktop/dna/src/Statistics.cpp",
		"/home/jh/Desktop/dna/src/Distance.cpp",
		"/home/jh/Desktop/dna/configs/DEFAULT",
		"/home/jh/Desktop/dna/include/Verify.hpp",
		"/home/jh/Desktop/dna/src/Verify.cpp",
		"/home/jh/Desktop/dna/src/Particle.cpp",
		"/home/jh/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/jh/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n}"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/Distance.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 984,
						"regions":
						{
						},
						"selection":
						[
							[
								618,
								618
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/Statistics.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 556,
						"regions":
						{
						},
						"selection":
						[
							[
								224,
								224
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/Particle.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1698,
						"regions":
						{
						},
						"selection":
						[
							[
								523,
								523
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/Verify.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2336,
						"regions":
						{
						},
						"selection":
						[
							[
								1468,
								1468
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Verify.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5974,
						"regions":
						{
						},
						"selection":
						[
							[
								5177,
								5177
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2244.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "src/Distance.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5595,
						"regions":
						{
						},
						"selection":
						[
							[
								1444,
								1444
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 867.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "configs/DEFAULT",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 696,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Statistics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2167,
						"regions":
						{
						},
						"selection":
						[
							[
								580,
								580
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 425.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Particle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10376,
						"regions":
						{
						},
						"selection":
						[
							[
								952,
								952
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 535.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
